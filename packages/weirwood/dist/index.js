import f from"webextension-polyfill";import u from"webextension-polyfill";var l=class{constructor(e){this.stateManager=e;this.ports={};this.onInstanceConnectListener=()=>{};this.instanceDisconnectListener=()=>{};u.runtime.onConnect.addListener(t=>{t.name==="weirwood"&&(console.log("Porter, heard port connect to weirwood. port tabId: ",t.sender.tab.id),this.addPort(t),this.sendStateUpdate(t.sender.tab.id))})}addPort(e){console.log("Porter, adding port: ",e);let t=e.sender.tab.id,n=e.sender.frameId;if(this.ports[t]&&this.ports[t].hasOwnProperty(n)){console.log("Porter, tabId already exists. Ignoring add request.");return}this.ports[t]?this.ports[t][n]=e:this.ports[t]={[n]:e},console.log("Porter, added port. Ports: ",this.ports),e.onMessage.addListener(i=>this.handleMessage(t,i)),e.onDisconnect.addListener(()=>{console.log("Ports disconnected. tabId: ",t),delete this.ports[t],this.instanceDisconnectListener(e)}),this.onInstanceConnectListener(e)}onInstanceConnect(e){this.onInstanceConnectListener=e}onInstanceDisconnect(e){this.instanceDisconnectListener=e}handleMessage(e,t){t.type==="setState"&&(console.log("handleMessage, setState"),this.stateManager.set(t.state,e)),t.type==="setInstanceState"&&(console.log("handleMessage, setInstanceState"),this.stateManager.set(t.state,t.tabId))}sendStateUpdate(e){this.ports[e]?(console.log("sendStateUpdate: tab",e," state: ",this.stateManager.get(e)),Object.keys(this.ports[e]).forEach(t=>{this.ports[e][Number(t)].postMessage({type:"stateUpdate",state:{...this.stateManager.get(e)}})})):console.log("sendStateUpdate: No port for tabId: ",e," yet.")}broadcastStateUpdate(e){console.log("Broadcasting state update"),Object.keys(this.ports).forEach(t=>{this.sendStateUpdate(Number(t))})}};var S=class{constructor(e,t){this.config=e;this.onStateChangeListeners=[];this.instanceConnectListener=()=>{};this.instanceDisconnectListener=()=>{};this.STORAGE_PREFIX="ww_";console.log("Weirwood constructor called."),this.defaultInstanceState=this.instanceStates=this.initializeInstanceDefault(),this.defaultWorkerState=this.workerState=this.initializeWorkerDefault(),this.hydrate(),this.porter=new l(this),this.porter.onInstanceConnect(n=>{let i=this.instanceConnectListener(n,this.instanceStates,this.workerState),r=n.sender.tab.id;this.addInstance(r,i),n.onDisconnect.addListener(()=>{this.removeInstance(r),this.instanceDisconnectListener(n,this.instanceStates,this.workerState)})}),t&&(this.STORAGE_PREFIX=t),this.subscribe(n=>{console.log("State change detected. Broadcasting state update. changes: ",n),this.porter.broadcastStateUpdate(this.get())})}get(e){return e?{...this.workerState,...this.instanceStates[e]}:{...this.workerState}}async set(e,t){console.log("Weirwood.set, state: ",e," tabId: ",t);let n={},i={};for(let r in e){let a=this.config[r];if(a.partition==="instance"){let c=r,g=e;n[c]=g[c]}else if(!a.partition||a.partition==="worker"){let c=r,g=e;i[c]=g[c]}}t&&this.setInstanceState(t,n),this.setWorkerState(i)}async setWorkerState(e){console.log("setWorkerState, update: ",e);let t={...this.workerState,...e};this.deepEqual(this.workerState,t)||(this.workerState=t,await this.persist(e),this.notify(e))}async setInstanceState(e,t){console.log("setInstanceState");let n={...this.defaultInstanceState,...this.instanceStates[e],...t};this.deepEqual(this.instanceStates[e],n)||(this.instanceStates[e]=n,this.notify(t,e))}async clear(){this.workerState=this.defaultWorkerState,this.instanceStates={},await this.persist(),this.notify({})}subscribe(e){this.onStateChangeListeners.push(e)}notify(e,t){this.onStateChangeListeners.forEach(n=>n(e,t))}async addInstance(e,t){if(!this.instanceStates.hasOwnProperty(e)){let n={...this.defaultInstanceState};t&&(n.context={...t}),console.log("Adding tab. new instance state: ",n),this.instanceStates[e]=n}}onInstanceConnect(e){this.instanceConnectListener=e}onInstanceDisconnect(e){this.instanceDisconnectListener=e}async removeInstance(e){this.instanceStates.hasOwnProperty(e)&&delete this.instanceStates[e]}async persist(e){for(let t in e||this.workerState){let i=this.config[t].persistance||"none",r=e?e[t]:this.workerState[t];switch(console.log("Persisting: ",t,r," persistence: ",i),i){case"session":await f.storage.session.set({[this.STORAGE_PREFIX+t]:r});break;case"local":await f.storage.local.set({[this.STORAGE_PREFIX+t]:r});break;default:break}}}async hydrate(){console.log("Hydrating");let e=await f.storage.local.get(null),t=await f.storage.session.get(null);console.log("session: ",t);let n={...e,...t},i={};for(let r in n){let a=this.removePrefix(r);if(this.config.hasOwnProperty(a)){let c=n[a];i[a]=c}}this.workerState={...this.defaultWorkerState,...i}}getDefaultStates(){return console.log("Getting default states."),{...this.defaultWorkerState,...this.defaultInstanceState}}initializeInstanceDefault(){let e={};return Object.keys(this.config).forEach(t=>{let n=this.config[t];n.partition==="instance"&&(e[t]=n.default)}),e}initializeWorkerDefault(){let e={};return Object.keys(this.config).forEach(t=>{let n=this.config[t];n.partition==="worker"&&(e[t]=n.default)}),e}removePrefix(e){return e.startsWith(this.STORAGE_PREFIX)?e.replace(this.STORAGE_PREFIX,""):e}deepEqual(e,t){if(e===t)return!0;if(e==null||typeof e!="object"||t==null||typeof t!="object")return!1;let n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;n.sort(),i.sort();for(let r=0;r<n.length;r++){let a=n[r];if(a!==i[r]||!this.deepEqual(e[a],t[a]))return!1}return!0}};function p(o,e){return new S(o,e)}function v(o,e){console.log("Weirewood connect called from context: ",e);let t=f.runtime.connect({name:"weirwood"}),n=h(o),i=null,r=new Map,a=0;return t.onMessage.addListener(s=>{s.type==="stateUpdate"&&(console.log("stateUpdate received, message: ",s),i=s.state,n={...n,...i},r.forEach(d=>{i&&(d.key===void 0||Object.keys(i).includes(String(d.key)))&&d.callback(i)}))}),{get:()=>n,set:s=>{console.log("weirwood connect set called."),t.postMessage({type:"setState",payload:{state:s}})},subscribe:(s,d)=>(r.set(++a,{key:d,callback:s}),a),unsubscribe:s=>{r.delete(s)},port:t}}function h(o){let e={};Object.keys(o).forEach(n=>{let i=o[n];i.partition==="instance"&&(e[n]=i.default)});let t={};return Object.keys(o).forEach(n=>{let i=o[n];i.partition==="instance"&&(t[n]=i.default)}),{...e,...t}}export{S as Weirwood,v as connect,p as create};
//# sourceMappingURL=index.js.map
