{
  "version": 3,
  "sources": ["../../../../../../node_modules/webextension-polyfill/dist/browser-polyfill.js", "../../../src/web-ext/background.ts", "../../../../../weirwood/src/weirwood.ts", "../../../../../weirwood/src/porter.ts", "../../../src/web-ext/services/http.service.ts", "../../../src/web-ext/weirwood/config.ts"],
  "sourcesContent": ["/* webextension-polyfill - v0.10.0 - Fri Aug 12 2022 19:42:44 */\n/* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n/* vim: set sts=2 sw=2 et tw=80: */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\"use strict\";\n\nif (!globalThis.chrome?.runtime?.id) {\n  throw new Error(\"This script should only be loaded in a browser extension.\");\n}\n\nif (typeof globalThis.browser === \"undefined\" || Object.getPrototypeOf(globalThis.browser) !== Object.prototype) {\n  const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n\n  // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n  // optimization for Firefox. Since Spidermonkey does not fully parse the\n  // contents of a function until the first time it's called, and since it will\n  // never actually need to be called, this allows the polyfill to be included\n  // in Firefox nearly for free.\n  const wrapAPIs = extensionAPIs => {\n    // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n    // at build time by replacing the following \"include\" with the content of the\n    // JSON file.\n    const apiMetadata = {\n      \"alarms\": {\n        \"clear\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"clearAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"get\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"bookmarks\": {\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getChildren\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getRecent\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getSubTree\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTree\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"move\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeTree\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"browserAction\": {\n        \"disable\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"enable\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"getBadgeBackgroundColor\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getBadgeText\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"openPopup\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"setBadgeBackgroundColor\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setBadgeText\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"setPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"browsingData\": {\n        \"remove\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"removeCache\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeCookies\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeDownloads\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeFormData\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeHistory\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeLocalStorage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removePasswords\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removePluginData\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"settings\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"commands\": {\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"contextMenus\": {\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"cookies\": {\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAllCookieStores\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"set\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"devtools\": {\n        \"inspectedWindow\": {\n          \"eval\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2,\n            \"singleCallbackArg\": false\n          }\n        },\n        \"panels\": {\n          \"create\": {\n            \"minArgs\": 3,\n            \"maxArgs\": 3,\n            \"singleCallbackArg\": true\n          },\n          \"elements\": {\n            \"createSidebarPane\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        }\n      },\n      \"downloads\": {\n        \"cancel\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"download\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"erase\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getFileIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"open\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"pause\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeFile\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"resume\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"show\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"extension\": {\n        \"isAllowedFileSchemeAccess\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"isAllowedIncognitoAccess\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"history\": {\n        \"addUrl\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"deleteAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"deleteRange\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"deleteUrl\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getVisits\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"i18n\": {\n        \"detectLanguage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAcceptLanguages\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"identity\": {\n        \"launchWebAuthFlow\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"idle\": {\n        \"queryState\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"management\": {\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getSelf\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"setEnabled\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"uninstallSelf\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        }\n      },\n      \"notifications\": {\n        \"clear\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getPermissionLevel\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"pageAction\": {\n        \"getPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"hide\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"setPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"show\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"permissions\": {\n        \"contains\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"request\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"runtime\": {\n        \"getBackgroundPage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getPlatformInfo\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"openOptionsPage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"requestUpdateCheck\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"sendMessage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 3\n        },\n        \"sendNativeMessage\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"setUninstallURL\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"sessions\": {\n        \"getDevices\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getRecentlyClosed\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"restore\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        }\n      },\n      \"storage\": {\n        \"local\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"managed\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"sync\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        }\n      },\n      \"tabs\": {\n        \"captureVisibleTab\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 2\n        },\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"detectLanguage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"discard\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"duplicate\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"executeScript\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getCurrent\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getZoom\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getZoomSettings\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"goBack\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"goForward\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"highlight\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"insertCSS\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"move\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"query\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"reload\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 2\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeCSS\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"sendMessage\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 3\n        },\n        \"setZoom\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"setZoomSettings\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"update\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        }\n      },\n      \"topSites\": {\n        \"get\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"webNavigation\": {\n        \"getAllFrames\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getFrame\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"webRequest\": {\n        \"handlerBehaviorChanged\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"windows\": {\n        \"create\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getCurrent\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getLastFocused\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      }\n    };\n\n    if (Object.keys(apiMetadata).length === 0) {\n      throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n    }\n\n    /**\n     * A WeakMap subclass which creates and stores a value for any key which does\n     * not exist when accessed, but behaves exactly as an ordinary WeakMap\n     * otherwise.\n     *\n     * @param {function} createItem\n     *        A function which will be called in order to create the value for any\n     *        key which does not exist, the first time it is accessed. The\n     *        function receives, as its only argument, the key being created.\n     */\n    class DefaultWeakMap extends WeakMap {\n      constructor(createItem, items = undefined) {\n        super(items);\n        this.createItem = createItem;\n      }\n\n      get(key) {\n        if (!this.has(key)) {\n          this.set(key, this.createItem(key));\n        }\n\n        return super.get(key);\n      }\n    }\n\n    /**\n     * Returns true if the given object is an object with a `then` method, and can\n     * therefore be assumed to behave as a Promise.\n     *\n     * @param {*} value The value to test.\n     * @returns {boolean} True if the value is thenable.\n     */\n    const isThenable = value => {\n      return value && typeof value === \"object\" && typeof value.then === \"function\";\n    };\n\n    /**\n     * Creates and returns a function which, when called, will resolve or reject\n     * the given promise based on how it is called:\n     *\n     * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n     *   the promise is rejected with that value.\n     * - If the function is called with exactly one argument, the promise is\n     *   resolved to that value.\n     * - Otherwise, the promise is resolved to an array containing all of the\n     *   function's arguments.\n     *\n     * @param {object} promise\n     *        An object containing the resolution and rejection functions of a\n     *        promise.\n     * @param {function} promise.resolve\n     *        The promise's resolution function.\n     * @param {function} promise.reject\n     *        The promise's rejection function.\n     * @param {object} metadata\n     *        Metadata about the wrapped method which has created the callback.\n     * @param {boolean} metadata.singleCallbackArg\n     *        Whether or not the promise is resolved with only the first\n     *        argument of the callback, alternatively an array of all the\n     *        callback arguments is resolved. By default, if the callback\n     *        function is invoked with only a single argument, that will be\n     *        resolved to the promise, while all arguments will be resolved as\n     *        an array if multiple are given.\n     *\n     * @returns {function}\n     *        The generated callback function.\n     */\n    const makeCallback = (promise, metadata) => {\n      return (...callbackArgs) => {\n        if (extensionAPIs.runtime.lastError) {\n          promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n        } else if (metadata.singleCallbackArg ||\n                   (callbackArgs.length <= 1 && metadata.singleCallbackArg !== false)) {\n          promise.resolve(callbackArgs[0]);\n        } else {\n          promise.resolve(callbackArgs);\n        }\n      };\n    };\n\n    const pluralizeArguments = (numArgs) => numArgs == 1 ? \"argument\" : \"arguments\";\n\n    /**\n     * Creates a wrapper function for a method with the given name and metadata.\n     *\n     * @param {string} name\n     *        The name of the method which is being wrapped.\n     * @param {object} metadata\n     *        Metadata about the method being wrapped.\n     * @param {integer} metadata.minArgs\n     *        The minimum number of arguments which must be passed to the\n     *        function. If called with fewer than this number of arguments, the\n     *        wrapper will raise an exception.\n     * @param {integer} metadata.maxArgs\n     *        The maximum number of arguments which may be passed to the\n     *        function. If called with more than this number of arguments, the\n     *        wrapper will raise an exception.\n     * @param {boolean} metadata.singleCallbackArg\n     *        Whether or not the promise is resolved with only the first\n     *        argument of the callback, alternatively an array of all the\n     *        callback arguments is resolved. By default, if the callback\n     *        function is invoked with only a single argument, that will be\n     *        resolved to the promise, while all arguments will be resolved as\n     *        an array if multiple are given.\n     *\n     * @returns {function(object, ...*)}\n     *       The generated wrapper function.\n     */\n    const wrapAsyncFunction = (name, metadata) => {\n      return function asyncFunctionWrapper(target, ...args) {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          if (metadata.fallbackToNoCallback) {\n            // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n            // and so the polyfill will try to call it with a callback first, and it will fallback\n            // to not passing the callback if the first call fails.\n            try {\n              target[name](...args, makeCallback({resolve, reject}, metadata));\n            } catch (cbError) {\n              console.warn(`${name} API method doesn't seem to support the callback parameter, ` +\n                           \"falling back to call it without a callback: \", cbError);\n\n              target[name](...args);\n\n              // Update the API method metadata, so that the next API calls will not try to\n              // use the unsupported callback anymore.\n              metadata.fallbackToNoCallback = false;\n              metadata.noCallback = true;\n\n              resolve();\n            }\n          } else if (metadata.noCallback) {\n            target[name](...args);\n            resolve();\n          } else {\n            target[name](...args, makeCallback({resolve, reject}, metadata));\n          }\n        });\n      };\n    };\n\n    /**\n     * Wraps an existing method of the target object, so that calls to it are\n     * intercepted by the given wrapper function. The wrapper function receives,\n     * as its first argument, the original `target` object, followed by each of\n     * the arguments passed to the original method.\n     *\n     * @param {object} target\n     *        The original target object that the wrapped method belongs to.\n     * @param {function} method\n     *        The method being wrapped. This is used as the target of the Proxy\n     *        object which is created to wrap the method.\n     * @param {function} wrapper\n     *        The wrapper function which is called in place of a direct invocation\n     *        of the wrapped method.\n     *\n     * @returns {Proxy<function>}\n     *        A Proxy object for the given method, which invokes the given wrapper\n     *        method in its place.\n     */\n    const wrapMethod = (target, method, wrapper) => {\n      return new Proxy(method, {\n        apply(targetMethod, thisObj, args) {\n          return wrapper.call(thisObj, target, ...args);\n        },\n      });\n    };\n\n    let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    /**\n     * Wraps an object in a Proxy which intercepts and wraps certain methods\n     * based on the given `wrappers` and `metadata` objects.\n     *\n     * @param {object} target\n     *        The target object to wrap.\n     *\n     * @param {object} [wrappers = {}]\n     *        An object tree containing wrapper functions for special cases. Any\n     *        function present in this object tree is called in place of the\n     *        method in the same location in the `target` object tree. These\n     *        wrapper methods are invoked as described in {@see wrapMethod}.\n     *\n     * @param {object} [metadata = {}]\n     *        An object tree containing metadata used to automatically generate\n     *        Promise-based wrapper functions for asynchronous. Any function in\n     *        the `target` object tree which has a corresponding metadata object\n     *        in the same location in the `metadata` tree is replaced with an\n     *        automatically-generated wrapper function, as described in\n     *        {@see wrapAsyncFunction}\n     *\n     * @returns {Proxy<object>}\n     */\n    const wrapObject = (target, wrappers = {}, metadata = {}) => {\n      let cache = Object.create(null);\n      let handlers = {\n        has(proxyTarget, prop) {\n          return prop in target || prop in cache;\n        },\n\n        get(proxyTarget, prop, receiver) {\n          if (prop in cache) {\n            return cache[prop];\n          }\n\n          if (!(prop in target)) {\n            return undefined;\n          }\n\n          let value = target[prop];\n\n          if (typeof value === \"function\") {\n            // This is a method on the underlying object. Check if we need to do\n            // any wrapping.\n\n            if (typeof wrappers[prop] === \"function\") {\n              // We have a special-case wrapper for this method.\n              value = wrapMethod(target, target[prop], wrappers[prop]);\n            } else if (hasOwnProperty(metadata, prop)) {\n              // This is an async method that we have metadata for. Create a\n              // Promise wrapper for it.\n              let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n              value = wrapMethod(target, target[prop], wrapper);\n            } else {\n              // This is a method that we don't know or care about. Return the\n              // original method, bound to the underlying object.\n              value = value.bind(target);\n            }\n          } else if (typeof value === \"object\" && value !== null &&\n                     (hasOwnProperty(wrappers, prop) ||\n                      hasOwnProperty(metadata, prop))) {\n            // This is an object that we need to do some wrapping for the children\n            // of. Create a sub-object wrapper for it with the appropriate child\n            // metadata.\n            value = wrapObject(value, wrappers[prop], metadata[prop]);\n          } else if (hasOwnProperty(metadata, \"*\")) {\n            // Wrap all properties in * namespace.\n            value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n          } else {\n            // We don't need to do any wrapping for this property,\n            // so just forward all access to the underlying object.\n            Object.defineProperty(cache, prop, {\n              configurable: true,\n              enumerable: true,\n              get() {\n                return target[prop];\n              },\n              set(value) {\n                target[prop] = value;\n              },\n            });\n\n            return value;\n          }\n\n          cache[prop] = value;\n          return value;\n        },\n\n        set(proxyTarget, prop, value, receiver) {\n          if (prop in cache) {\n            cache[prop] = value;\n          } else {\n            target[prop] = value;\n          }\n          return true;\n        },\n\n        defineProperty(proxyTarget, prop, desc) {\n          return Reflect.defineProperty(cache, prop, desc);\n        },\n\n        deleteProperty(proxyTarget, prop) {\n          return Reflect.deleteProperty(cache, prop);\n        },\n      };\n\n      // Per contract of the Proxy API, the \"get\" proxy handler must return the\n      // original value of the target if that value is declared read-only and\n      // non-configurable. For this reason, we create an object with the\n      // prototype set to `target` instead of using `target` directly.\n      // Otherwise we cannot return a custom object for APIs that\n      // are declared read-only and non-configurable, such as `chrome.devtools`.\n      //\n      // The proxy handlers themselves will still use the original `target`\n      // instead of the `proxyTarget`, so that the methods and properties are\n      // dereferenced via the original targets.\n      let proxyTarget = Object.create(target);\n      return new Proxy(proxyTarget, handlers);\n    };\n\n    /**\n     * Creates a set of wrapper functions for an event object, which handles\n     * wrapping of listener functions that those messages are passed.\n     *\n     * A single wrapper is created for each listener function, and stored in a\n     * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n     * retrieve the original wrapper, so that  attempts to remove a\n     * previously-added listener work as expected.\n     *\n     * @param {DefaultWeakMap<function, function>} wrapperMap\n     *        A DefaultWeakMap object which will create the appropriate wrapper\n     *        for a given listener function when one does not exist, and retrieve\n     *        an existing one when it does.\n     *\n     * @returns {object}\n     */\n    const wrapEvent = wrapperMap => ({\n      addListener(target, listener, ...args) {\n        target.addListener(wrapperMap.get(listener), ...args);\n      },\n\n      hasListener(target, listener) {\n        return target.hasListener(wrapperMap.get(listener));\n      },\n\n      removeListener(target, listener) {\n        target.removeListener(wrapperMap.get(listener));\n      },\n    });\n\n    const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n      if (typeof listener !== \"function\") {\n        return listener;\n      }\n\n      /**\n       * Wraps an onRequestFinished listener function so that it will return a\n       * `getContent()` property which returns a `Promise` rather than using a\n       * callback API.\n       *\n       * @param {object} req\n       *        The HAR entry object representing the network request.\n       */\n      return function onRequestFinished(req) {\n        const wrappedReq = wrapObject(req, {} /* wrappers */, {\n          getContent: {\n            minArgs: 0,\n            maxArgs: 0,\n          },\n        });\n        listener(wrappedReq);\n      };\n    });\n\n    const onMessageWrappers = new DefaultWeakMap(listener => {\n      if (typeof listener !== \"function\") {\n        return listener;\n      }\n\n      /**\n       * Wraps a message listener function so that it may send responses based on\n       * its return value, rather than by returning a sentinel value and calling a\n       * callback. If the listener function returns a Promise, the response is\n       * sent when the promise either resolves or rejects.\n       *\n       * @param {*} message\n       *        The message sent by the other end of the channel.\n       * @param {object} sender\n       *        Details about the sender of the message.\n       * @param {function(*)} sendResponse\n       *        A callback which, when called with an arbitrary argument, sends\n       *        that value as a response.\n       * @returns {boolean}\n       *        True if the wrapped listener returned a Promise, which will later\n       *        yield a response. False otherwise.\n       */\n      return function onMessage(message, sender, sendResponse) {\n        let didCallSendResponse = false;\n\n        let wrappedSendResponse;\n        let sendResponsePromise = new Promise(resolve => {\n          wrappedSendResponse = function(response) {\n            didCallSendResponse = true;\n            resolve(response);\n          };\n        });\n\n        let result;\n        try {\n          result = listener(message, sender, wrappedSendResponse);\n        } catch (err) {\n          result = Promise.reject(err);\n        }\n\n        const isResultThenable = result !== true && isThenable(result);\n\n        // If the listener didn't returned true or a Promise, or called\n        // wrappedSendResponse synchronously, we can exit earlier\n        // because there will be no response sent from this listener.\n        if (result !== true && !isResultThenable && !didCallSendResponse) {\n          return false;\n        }\n\n        // A small helper to send the message if the promise resolves\n        // and an error if the promise rejects (a wrapped sendMessage has\n        // to translate the message into a resolved promise or a rejected\n        // promise).\n        const sendPromisedResult = (promise) => {\n          promise.then(msg => {\n            // send the message value.\n            sendResponse(msg);\n          }, error => {\n            // Send a JSON representation of the error if the rejected value\n            // is an instance of error, or the object itself otherwise.\n            let message;\n            if (error && (error instanceof Error ||\n                typeof error.message === \"string\")) {\n              message = error.message;\n            } else {\n              message = \"An unexpected error occurred\";\n            }\n\n            sendResponse({\n              __mozWebExtensionPolyfillReject__: true,\n              message,\n            });\n          }).catch(err => {\n            // Print an error on the console if unable to send the response.\n            console.error(\"Failed to send onMessage rejected reply\", err);\n          });\n        };\n\n        // If the listener returned a Promise, send the resolved value as a\n        // result, otherwise wait the promise related to the wrappedSendResponse\n        // callback to resolve and send it as a response.\n        if (isResultThenable) {\n          sendPromisedResult(result);\n        } else {\n          sendPromisedResult(sendResponsePromise);\n        }\n\n        // Let Chrome know that the listener is replying.\n        return true;\n      };\n    });\n\n    const wrappedSendMessageCallback = ({reject, resolve}, reply) => {\n      if (extensionAPIs.runtime.lastError) {\n        // Detect when none of the listeners replied to the sendMessage call and resolve\n        // the promise to undefined as in Firefox.\n        // See https://github.com/mozilla/webextension-polyfill/issues/130\n        if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n          resolve();\n        } else {\n          reject(new Error(extensionAPIs.runtime.lastError.message));\n        }\n      } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n        // Convert back the JSON representation of the error into\n        // an Error instance.\n        reject(new Error(reply.message));\n      } else {\n        resolve(reply);\n      }\n    };\n\n    const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n      if (args.length < metadata.minArgs) {\n        throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n      }\n\n      if (args.length > metadata.maxArgs) {\n        throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n      }\n\n      return new Promise((resolve, reject) => {\n        const wrappedCb = wrappedSendMessageCallback.bind(null, {resolve, reject});\n        args.push(wrappedCb);\n        apiNamespaceObj.sendMessage(...args);\n      });\n    };\n\n    const staticWrappers = {\n      devtools: {\n        network: {\n          onRequestFinished: wrapEvent(onRequestFinishedWrappers),\n        },\n      },\n      runtime: {\n        onMessage: wrapEvent(onMessageWrappers),\n        onMessageExternal: wrapEvent(onMessageWrappers),\n        sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {minArgs: 1, maxArgs: 3}),\n      },\n      tabs: {\n        sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {minArgs: 2, maxArgs: 3}),\n      },\n    };\n    const settingMetadata = {\n      clear: {minArgs: 1, maxArgs: 1},\n      get: {minArgs: 1, maxArgs: 1},\n      set: {minArgs: 1, maxArgs: 1},\n    };\n    apiMetadata.privacy = {\n      network: {\"*\": settingMetadata},\n      services: {\"*\": settingMetadata},\n      websites: {\"*\": settingMetadata},\n    };\n\n    return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n  };\n\n  // The build process adds a UMD wrapper around this file, which makes the\n  // `module` variable available.\n  module.exports = wrapAPIs(chrome);\n} else {\n  module.exports = globalThis.browser;\n}\n", "import browser from 'webextension-polyfill';\nimport { create, Weirwood } from 'weirwood';\nimport { HttpService } from './services/http.service';\nimport { StateConfig } from './weirwood/config';\n\nclass BackgroundScript {\n    // private stateSyncService: StateSyncService<StorageState>;\n    // private portManager: PortManager;\n    private httpService: HttpService;\n    private weirwood: Weirwood<typeof StateConfig>;\n\n\n    constructor() {\n        console.log(\"Hello\");\n        console.log(\"background script constructor called\");\n        console.log(\"Performance measurement started.\");\n        this.httpService = new HttpService();\n        this.weirwood = create(StateConfig);\n        // Add custom derived state to any newly created instance\n        this.weirwood.onInstanceConnect((port, instances, workerState) => {\n            const tabId = port.sender!.tab!.id!;\n            const tabUrl = port.sender!.tab!.url!;\n            this.weirwood.set({ ports: Object.keys(instances).map(instanceId => Number(instanceId)) });\n            this.weirwood.set({ stats: { active: Object.keys(instances).length, open: Object.keys(instances).filter(instanceId => instances[Number(instanceId)].isOpen).length } });\n            return { tabUrl, tabId, initialized: new Date().getTime().toString() };\n        });\n        this.weirwood.onInstanceDisconnect((port, instances, workerState) => {\n            this.weirwood.set({ ports: Object.keys(instances).map(instanceId => Number(instanceId)) });\n            this.weirwood.set({ stats: { active: Object.keys(instances).length, open: Object.keys(instances).filter(instanceId => instances[Number(instanceId)].isOpen).length } });\n        });\n        this.weirwood.subscribe((changes,) => {\n            if (changes.hasOwnProperty('isOpen')) {\n                const { stats } = this.weirwood.get();\n                const openCount = changes.isOpen ? stats.open + 1 : stats.open - 1;\n                const newStats = { ...stats, open: openCount };\n                this.weirwood.set({ stats: newStats });\n            }\n        });\n        this.establishListeners();\n    }\n\n\n    private establishListeners() {\n        browser.action.onClicked.addListener((tab) => {\n            browser.tabs.sendMessage(tab.id!, { type: 'toggleApp' });\n        });\n\n        browser.runtime.onConnect.addListener(port => {\n            if (port.name === 'fetchChannel') {\n                console.log(\"Connecting fetchChannel\");\n                port.onMessage.addListener(request => {\n                    console.log(\"Fetch request heard: \", request);\n                    this.httpService.handleFetchRequest(request).then((card) => {\n                        if (card) {\n                            // console.log(\"Setting magicCard in weirwood: \", card);\n                            const cardSimplified = {\n                                flavor_name: card.flavor_name,\n                                colors: card.colors,\n                                image_uris: { normal: card.image_uris.normal },\n                                name: card.name,\n                                power: card.power,\n                                toughness: card.toughness,\n                            }\n                            this.weirwood.set({ magicCard: cardSimplified })\n                        }\n                    });\n                });\n            }\n        });\n        browser.runtime.onInstalled.addListener(details => {\n            console.log('onInstalled listener heard. details: ', details);\n            if (details.reason === 'install') {\n                this.weirwood.clear();\n            }\n            if (details.reason === 'update') {\n                this.weirwood.clear();\n            }\n        });\n        browser.runtime.onStartup.addListener(() => {\n            console.log('onStartup listener heard.');\n        });\n        browser.runtime.onSuspend.addListener(() => {\n            console.log('onSuspend listener heard.');\n        });\n        browser.runtime.onSuspendCanceled.addListener(() => {\n            console.log('onSuspendCanceled listener heard.');\n        });\n        browser.runtime.onUpdateAvailable.addListener(() => {\n            console.log('onUpdateAvailable listener heard.');\n        });\n    }\n\n}\n\nnew BackgroundScript();", "import browser from 'webextension-polyfill';\nimport { ConfigItem, DerivedInstanceState, DerivedState, DerivedWorkerState, StateSubscriber, WeirwoodConnect } from './model/weirwood.model';\nimport { Porter } from './porter';\n\nexport class Weirwood<TConfig extends Record<string, ConfigItem<any>>> {\n    private defaultInstanceState: DerivedInstanceState<TConfig>;\n    private defaultWorkerState: DerivedWorkerState<TConfig>;\n    private instanceStates: { [tabId: number]: DerivedInstanceState<TConfig> };\n    private workerState: DerivedWorkerState<TConfig>;\n    private onStateChangeListeners: Array<(state: Partial<DerivedState<TConfig>>, tabId?: number) => void> = [];\n    private instanceConnectListener: (port: browser.Runtime.Port, instanceStates: { [tabId: number]: DerivedInstanceState<TConfig> }, workerState: DerivedWorkerState<TConfig>) => any = () => { };\n    private instanceDisconnectListener: (port: browser.Runtime.Port, instanceStates: { [tabId: number]: DerivedInstanceState<TConfig> }, workerState: DerivedWorkerState<TConfig>) => void = () => { };\n    private STORAGE_PREFIX = 'ww_';\n    private porter: Porter;\n\n    constructor(private config: TConfig, storagePrefix?: string) {\n        console.log('Weirwood constructor called.');\n        this.defaultInstanceState = this.instanceStates = this.initializeInstanceDefault();\n        this.defaultWorkerState = this.workerState = this.initializeWorkerDefault();\n        this.hydrate();\n        this.porter = new Porter(this);\n        this.porter.onInstanceConnect(port => {\n            const context = this.instanceConnectListener(port, this.instanceStates, this.workerState);\n            const tabId = port.sender!.tab!.id!;\n            this.addInstance(tabId, context);\n            port.onDisconnect.addListener(() => {\n                this.removeInstance(tabId);\n                this.instanceDisconnectListener(port, this.instanceStates, this.workerState);\n            });\n        });\n        if (storagePrefix) {\n            this.STORAGE_PREFIX = storagePrefix;\n        }\n        // Notify tabs of state changes\n        this.subscribe((changes) => {\n            console.log('State change detected. Broadcasting state update. changes: ', changes)\n            this.porter.broadcastStateUpdate(this.get());\n        });\n    }\n\n    public get(): DerivedState<TConfig>\n    public get(tabId: number): DerivedInstanceState<TConfig> & DerivedWorkerState<TConfig>;\n    public get(tabId?: number): (DerivedInstanceState<TConfig> | DerivedState<TConfig>) {\n        if (!tabId) {\n            return { ...this.workerState, ...{} as DerivedInstanceState<TConfig> };\n        }\n        return { ...this.workerState, ...this.instanceStates[tabId] };\n    }\n\n    public async set(state: Partial<DerivedWorkerState<TConfig>>): Promise<void>\n    public async set(state: Partial<DerivedInstanceState<TConfig> & DerivedWorkerState<TConfig>>, tabId: number): Promise<void>\n    public async set(state: Partial<DerivedInstanceState<TConfig> | DerivedWorkerState<TConfig>>, tabId?: number): Promise<void> {\n        console.log(\"Weirwood.set, state: \", state, \" tabId: \", tabId);\n        const instance = {} as Partial<DerivedInstanceState<TConfig>>;\n        const worker = {} as Partial<DerivedWorkerState<TConfig>>;\n\n        for (const key in state) {\n            const item = this.config[key as keyof TConfig] as ConfigItem<any>;\n            if (item.partition === 'instance') {\n                const instanceKey = key as keyof DerivedInstanceState<TConfig>;\n                const instanceState = state as Partial<DerivedInstanceState<TConfig>>;\n                instance[instanceKey] = instanceState[instanceKey];\n            } else if (!item.partition || item.partition === 'worker') {\n                const workerKey = key as keyof DerivedWorkerState<TConfig>;\n                const workerState = state as Partial<DerivedWorkerState<TConfig>>;\n                worker[workerKey] = workerState[workerKey]!;\n            }\n        }\n        if (tabId) this.setInstanceState(tabId, instance);\n        this.setWorkerState(worker);\n    }\n\n    public async setWorkerState(state: Partial<DerivedWorkerState<TConfig>>): Promise<void> {\n        console.log('setWorkerState, update: ', state);\n        const update = { ...this.workerState, ...state };\n        if (!this.deepEqual(this.workerState, update)) {\n            this.workerState = update;\n            await this.persist(state);\n            this.notify(state as Partial<DerivedState<TConfig>>);\n        }\n    }\n\n    public async setInstanceState(tabId: number, state: Partial<DerivedInstanceState<TConfig>>): Promise<void> {\n        console.log('setInstanceState');\n        const update = { ...this.defaultInstanceState, ...this.instanceStates[tabId], ...state };\n        if (!this.deepEqual(this.instanceStates[tabId], update)) {\n            this.instanceStates[tabId] = update;\n            this.notify(state as Partial<DerivedState<TConfig>>, tabId);\n        }\n    }\n\n    public async clear(): Promise<void> {\n        this.workerState = this.defaultWorkerState;\n        this.instanceStates = {};\n        await this.persist();\n        this.notify({});\n    }\n\n    public subscribe(listener: (state: Partial<DerivedState<TConfig>>, tabId?: number) => void): void {\n        this.onStateChangeListeners.push(listener);\n    }\n\n    private notify(state: Partial<DerivedState<TConfig>>, tabId?: number): void {\n        this.onStateChangeListeners.forEach(listener => listener(state, tabId));\n    }\n\n    public async addInstance(tabId: number, context?: any): Promise<void> {\n        if (!this.instanceStates.hasOwnProperty(tabId)) {\n            const initialInstanceState = { ...this.defaultInstanceState } as DerivedInstanceState<TConfig>;\n            if (context) {\n                initialInstanceState.context = { ...context };\n            }\n            console.log(\"Adding tab. new instance state: \", initialInstanceState);\n            this.instanceStates[tabId] = initialInstanceState;\n        }\n    }\n\n    public onInstanceConnect(handler: (\n        port: browser.Runtime.Port,\n        instances: { [tabId: number]: DerivedInstanceState<TConfig> },\n        workerState: DerivedWorkerState<TConfig>) => any,\n    ): any {\n        this.instanceConnectListener = handler;\n    }\n\n    public onInstanceDisconnect(handler: (\n        port: browser.Runtime.Port,\n        instances: { [tabId: number]: DerivedInstanceState<TConfig> },\n        workerState: DerivedWorkerState<TConfig>) => any,\n    ): void {\n        this.instanceDisconnectListener = handler;\n    }\n\n    public async removeInstance(tabId: number): Promise<void> {\n        if (this.instanceStates.hasOwnProperty(tabId)) {\n            delete this.instanceStates[tabId];\n        }\n    }\n\n    // If we pass in specific state to persist, it only persists that state. \n    // Otherwise persists all of the worker state.\n    private async persist(state?: Partial<DerivedWorkerState<TConfig>>): Promise<void> {\n        for (const key in (state || this.workerState)) {\n            const item = this.config[key] as ConfigItem<any>;\n            const persistence = item.persistance || 'none';\n            const value = state ? state[key] : this.workerState[key];\n            console.log(\"Persisting: \", key, value, \" persistence: \", persistence);\n            switch (persistence) {\n                case 'session':\n                    await browser.storage.session.set({ [this.STORAGE_PREFIX + (key as string)]: value });\n                    break;\n                case 'local':\n                    await browser.storage.local.set({ [this.STORAGE_PREFIX + (key as string)]: value });\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    private async hydrate(): Promise<void> {\n        console.log('Hydrating');\n        const local = await browser.storage.local.get(null);\n        const session = await browser.storage.session.get(null);\n        console.log('session: ', session);\n        const combined = { ...local, ...session };\n        const update: Partial<DerivedWorkerState<TConfig>> = {}; // Cast update as Partial<DerivedState<TConfig>>\n        for (const prefixedKey in combined) {\n            const key = this.removePrefix(prefixedKey);\n            if (this.config.hasOwnProperty(key)) {\n                const value = combined[key];\n                update[key as keyof DerivedWorkerState<TConfig>] = value;\n            }\n        }\n        this.workerState = { ...this.defaultWorkerState, ...update };\n    }\n\n    public getDefaultStates(): DerivedInstanceState<TConfig> & DerivedWorkerState<TConfig> {\n        console.log('Getting default states.');\n        return { ...this.defaultWorkerState, ...this.defaultInstanceState };\n    }\n\n    private initializeInstanceDefault(): DerivedInstanceState<TConfig> {\n        const instanceState: any = {};\n        Object.keys(this.config).forEach(key => {\n            const item: ConfigItem<any> = this.config[key];\n            if (item.partition === 'instance') {\n                instanceState[key] = item.default;\n            }\n        });\n        return instanceState;\n    }\n\n    private initializeWorkerDefault(): DerivedWorkerState<TConfig> {\n        const workerState: any = {};\n        Object.keys(this.config).forEach(key => {\n            const item: ConfigItem<any> = this.config[key];\n            if (item.partition === 'worker') {\n                workerState[key] = item.default;\n            }\n        });\n        return workerState;\n    }\n\n    private removePrefix(key: string): string {\n        if (key.startsWith(this.STORAGE_PREFIX)) {\n            return key.replace(this.STORAGE_PREFIX, '');\n        }\n        return key;\n    }\n\n    private deepEqual(a: any, b: any): boolean {\n        if (a === b) return true;\n\n        if (a == null || typeof a !== 'object' || b == null || typeof b !== 'object') return false;\n\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n\n        if (keysA.length !== keysB.length) return false;\n\n        keysA.sort();\n        keysB.sort();\n\n        for (let i = 0; i < keysA.length; i++) {\n            const key = keysA[i];\n            if (key !== keysB[i] || !this.deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n}\n\nexport function create<TConfig extends Record<string, ConfigItem<any>>>(config: TConfig, storagePrefix?: string): Weirwood<TConfig> {\n    return new Weirwood(config, storagePrefix);\n}\n\nexport function connect<TConfig extends Record<string, ConfigItem<any>>>(config: TConfig, context?: string): WeirwoodConnect<TConfig> {\n    console.log(\"Weirewood connect called from context: \", context);\n    // If we're connecting from a content script or app, call browser.runtime.connect\n    const port = browser.runtime.connect({ name: 'weirwood' });\n    let _state = getDerivedState(config);\n    let changes: Partial<DerivedState<TConfig>> | null = null;\n    const listeners = new Map<number, StateSubscriber<TConfig>>();\n    let listenerId = 0;\n    port.onMessage.addListener(message => {\n        if (message.type === 'stateUpdate') {\n            console.log('stateUpdate received, message: ', message);\n            changes = message.state;\n            _state = { ..._state, ...changes };\n\n            listeners.forEach(listener => {\n                if (changes && (listener.key === undefined || Object.keys(changes).includes(String(listener.key)))) {\n                    listener.callback(changes);\n                }\n            });\n        }\n    });\n\n    const get = () => _state;\n    const set = (newState: Partial<DerivedState<TConfig>>) => {\n        console.log('weirwood connect set called.');\n        // console.log('weirwood connect set called. port: ', port.sender!.tab!.id!);\n        port.postMessage({ type: 'setState', payload: { state: newState } });\n    }\n    const subscribe = (callback: (changes: Partial<DerivedState<TConfig>>) => void, key?: keyof DerivedState<TConfig>): number => {\n        listeners.set(++listenerId, { key, callback });\n        return listenerId;\n    }\n    const unsubscribe = (id: number) => {\n        listeners.delete(id);\n    }\n    return { get, set, subscribe, unsubscribe, port };\n}\n\nfunction getDerivedState<TConfig extends Record<string, ConfigItem<any>>>(config: TConfig): DerivedState<TConfig> {\n    const instanceState = {} as DerivedInstanceState<TConfig>;\n\n    Object.keys(config).forEach(key => {\n        const item: ConfigItem<any> = config[key];\n        if (item.partition === 'instance') {\n            instanceState[key as keyof DerivedInstanceState<TConfig>] = item.default;\n        }\n    });\n\n    const workerState = {} as DerivedWorkerState<TConfig>;\n    Object.keys(config).forEach(key => {\n        const item: ConfigItem<any> = config[key];\n        if (item.partition === 'instance') {\n            workerState[key as keyof DerivedWorkerState<TConfig>] = item.default;\n        }\n    });\n\n    return { ...instanceState, ...workerState } as DerivedState<TConfig>;\n}\n", "import browser from 'webextension-polyfill';\nimport { Weirwood } from './weirwood';\n\nexport class Porter {\n    private ports: { [tabId: number]: { [frameId: number]: browser.Runtime.Port } } = {};\n    private onInstanceConnectListener: (port: browser.Runtime.Port) => void = () => { };\n    private instanceDisconnectListener: (port: browser.Runtime.Port) => void = () => { };\n\n    constructor(private stateManager: Weirwood<any>) {\n        browser.runtime.onConnect.addListener(port => {\n            if (port.name === 'weirwood') {\n                console.log(\"Porter, heard port connect to weirwood. port tabId: \", port.sender!.tab!.id!);\n                this.addPort(port);\n                this.sendStateUpdate(port.sender!.tab!.id!,)\n            }\n        });\n    }\n\n    private addPort(port: browser.Runtime.Port): void {\n        console.log(\"Porter, adding port: \", port);\n        const tabId = port.sender!.tab!.id!;\n        const frameId = port.sender!.frameId!;\n        if (!!this.ports[tabId] && this.ports[tabId].hasOwnProperty(frameId)) {\n            console.log('Porter, tabId already exists. Ignoring add request.');\n            return;\n        }\n        if (!this.ports[tabId]) {\n            this.ports[tabId] = { [frameId]: port };\n        } else {\n            this.ports[tabId][frameId] = port;\n        }\n        console.log(\"Porter, added port. Ports: \", this.ports);\n        port.onMessage.addListener(message => this.handleMessage(tabId, message));\n        port.onDisconnect.addListener(() => {\n            console.log('Ports disconnected. tabId: ', tabId);\n            delete this.ports[tabId];\n            this.instanceDisconnectListener(port);\n        });\n        this.onInstanceConnectListener(port);\n    }\n\n    public onInstanceConnect(handler: (port: browser.Runtime.Port) => void): void {\n        this.onInstanceConnectListener = handler;\n    }\n\n    public onInstanceDisconnect(handler: (port: browser.Runtime.Port) => void): void {\n        this.instanceDisconnectListener = handler;\n    }\n\n    private handleMessage(tabId: number, message: any): void {\n        if (message.type === 'setState') {\n            console.log('handleMessage, setState');\n            this.stateManager.set(message.state, tabId);\n        }\n        if (message.type === 'setInstanceState') {\n            console.log('handleMessage, setInstanceState');\n            this.stateManager.set(message.state, message.tabId);\n        }\n    }\n\n    private sendStateUpdate(tabId: number): void {\n        if (this.ports[tabId]) {\n            console.log('sendStateUpdate: tab', tabId, ' state: ', this.stateManager.get(tabId));\n            Object.keys(this.ports[tabId]).forEach(frameId => {\n                this.ports[tabId][Number(frameId)].postMessage({\n                    type: 'stateUpdate',\n                    state: {\n                        ...this.stateManager.get(tabId),\n                    }\n                });\n            });\n            // this.ports[tabId].postMessage({\n            //     type: 'stateUpdate',\n            //     state: {\n            //         ...this.stateManager.get(tabId),\n            //     }\n            // });\n        } else {\n            console.log('sendStateUpdate: No port for tabId: ', tabId, ' yet.');\n        }\n    }\n\n    public broadcastStateUpdate(state: any): void {\n        console.log('Broadcasting state update');\n        Object.keys(this.ports).forEach(tabId => {\n            this.sendStateUpdate(Number(tabId))\n        });\n    }\n}\n", "\nimport { FetchRequest } from '../../models/http.model';\n\nexport class HttpService {\n\n    constructor() {\n    }\n\n    public async handleFetchRequest(request: FetchRequest): Promise<any> {\n        try {\n            const response = await fetch(request.url, {\n                method: request.method,\n                headers: request.headers,\n                body: request.body,\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n\n                // Update the state based on the response data\n                if (request.type === 'card') {\n                    return data;\n                    // this.stateSyncService.setState({\n                    //     ...this.stateSyncService.getState(),\n                    //     magicCard: data,\n                    // });\n                }\n            } else {\n                console.error('HTTP request failed:', response.status);\n            }\n        } catch (error) {\n            console.error('Error occurred during HTTP request:', error);\n        }\n    }\n}", "\nconst session = 'session' as const;\nconst local = 'local' as const;\nconst instance = 'instance' as const;\n\nexport const StateConfig = {\n    stats: {\n        default: {\n            active: 0,\n            open: 0\n        },\n        persistance: session\n    },\n    version: {\n        default: '',\n        persistance: session\n    },\n    magicCard: {\n        default: null as string | null,\n        persistance: session\n    },\n    ports: {\n        default: [] as number[],\n        persistance: session\n    },\n    // instance state\n    isOpen: { default: false, partition: instance },\n    initialized: { default: '', partition: instance },\n}\n"],
  "mappings": "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",
  "names": ["globalThis", "chrome", "runtime", "id", "Error", "browser", "Object", "getPrototypeOf", "prototype", "CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE", "wrapAPIs", "extensionAPIs", "apiMetadata", "keys", "length", "DefaultWeakMap", "WeakMap", "constructor", "createItem", "items", "undefined", "get", "key", "has", "set", "isThenable", "value", "then", "makeCallback", "promise", "metadata", "callbackArgs", "lastError", "reject", "message", "singleCallbackArg", "resolve", "pluralizeArguments", "numArgs", "wrapAsyncFunction", "name", "target", "args", "minArgs", "maxArgs", "Promise", "fallbackToNoCallback", "cbError", "console", "warn", "noCallback", "wrapMethod", "method", "wrapper", "Proxy", "apply", "targetMethod", "thisObj", "call", "hasOwnProperty", "Function", "bind", "wrapObject", "wrappers", "cache", "create", "handlers", "proxyTarget", "prop", "receiver", "defineProperty", "configurable", "enumerable", "desc", "Reflect", "deleteProperty", "wrapEvent", "wrapperMap", "addListener", "listener", "hasListener", "removeListener", "onRequestFinishedWrappers", "req", "wrappedReq", "getContent", "onMessageWrappers", "sender", "sendResponse", "didCallSendResponse", "wrappedSendResponse", "sendResponsePromise", "response", "result", "err", "isResultThenable", "sendPromisedResult", "msg", "error", "__mozWebExtensionPolyfillReject__", "catch", "wrappedSendMessageCallback", "reply", "wrappedSendMessage", "apiNamespaceObj", "wrappedCb", "push", "sendMessage", "staticWrappers", "devtools", "network", "onRequestFinished", "onMessage", "onMessageExternal", "tabs", "settingMetadata", "clear", "privacy", "services", "websites", "module", "exports", "import_webextension_polyfill", "import_webextension_polyfill", "Porter", "stateManager", "browser", "port", "tabId", "frameId", "message", "handler", "state", "Weirwood", "config", "storagePrefix", "context", "changes", "instance", "worker", "key", "item", "instanceKey", "instanceState", "workerKey", "workerState", "update", "listener", "initialInstanceState", "persistence", "value", "local", "session", "combined", "prefixedKey", "a", "b", "keysA", "keysB", "i", "create", "HttpService", "request", "response", "data", "error", "session", "instance", "StateConfig", "session", "BackgroundScript", "HttpService", "p", "StateConfig", "port", "instances", "workerState", "tabId", "tabUrl", "instanceId", "changes", "stats", "openCount", "newStats", "browser", "tab", "request", "card", "cardSimplified", "details"]
}
